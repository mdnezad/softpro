#include <iostream>
#include<string>
#include<stdlib.h>
#include<time.h>
#include<fstream>
#include<vector>
using namespace std;

int flag=0;
class user
{
    public:
        char first_name[20];
        char last_name[20];
        int amount;
        int game_id;
        int no_of_wining_matches;
        int no_of_lossing_matches;
};

void save_data_to_file(user user_name)
{
    fstream f;
    f.open("StudentRecord.txt",ios::out|ios::app);
    f.write((char*)&user_name,sizeof(user_name));
    cout<<"\nRecord Added Successfully..!";
    f.close();
}

user get_data_form_file(int id)
{
    fstream f;
    user user_name;
    f.open("StudentRecord.txt",ios::in);
    if(!f){
        cout<<"ERROR!!! FILE COULD NOT BE OPEN";
    }
    while(f.read((char*)&user_name,sizeof(user_name)))
    {

        if(user_name.game_id==id)
            return user_name;
    }
    f.close();
    return user_name;
}
void save_modify_data(user user_play,int id)
{
    user user_name;
    int flag = 0;
    fstream f;
    f.open("StudentRecord.txt",ios::in|ios::out);
    fstream fp2;
    fp2.open("Temp.txt",ios::out);
    f.seekg(0,ios::beg);

    while(f.read((char*)&user_name,sizeof(user_name)))
    {
        if(user_name.game_id!=id)
        {
            fp2.write((char*)&user_name,sizeof(user_name));
        }
        else
        {
            flag=1;
        }
    }
    f.close();
    fp2.close();
    if(flag==1)
    {
        f.write((char*)&user_name,sizeof(user_name));
        remove("StudentRecord.txt");
        rename("Temp.txt","StudentRecord.txt");
        cout<<"\n\n"<<"Record updated";
    }
    f.open("StudentRecord.txt",ios::out|ios::app);
    f.write((char*)&user_play,sizeof(user_play));
    f.close();

}
void delete_registration(user user_play,int id)
{
    user user_name;
    int flag = 0;
    fstream f;
    f.open("StudentRecord.txt",ios::in|ios::out);
    fstream fp2;
    fp2.open("Temp.txt",ios::out);
    f.seekg(0,ios::beg);

    while(f.read((char*)&user_name,sizeof(user_name)))
    {
        if(user_name.game_id!=id)
        {
            fp2.write((char*)&user_name,sizeof(user_name));
        }
        else
        {
            flag=1;
        }
    }
    f.close();
    fp2.close();
    if(flag==1)
    {
        f.write((char*)&user_name,sizeof(user_name));
        remove("StudentRecord.txt");
        rename("Temp.txt","StudentRecord.txt");
        cout<<"\n\n"<<"Record updated";
    }
}
int get_previous_gane_id()
{
    fstream f;
    user user_name;
    int id;
    int flag=0;
    f.open("StudentRecord.txt",ios::in);
    if(!f){
        cout<<"ERROR!!! FILE COULD NOT BE OPEN";
    }
    while(f.read((char*)&user_name,sizeof(user_name)))
    {
        flag=1;
        id = user_name.game_id;
    }
    f.close();
    if(flag==0)
    {
        return -1;
    }
    else
        return id;
}
void rule()
{
    cout<<"\n\n"<<"**********Casino Number Guessing Game Rules**********";
    cout<<"\n"<<"1. You have to guess the number from 1 to 10";
    cout<<"\n"<<"2. If your number is match with casino number you will win";
    cout<<"\n"<<"3. You have to add the money first to your wallet to play the game";
    cout<<"\n"<<"4. You have to decide betting amount for your game which should be smaller or equal to the amount present in your wallet";
    cout<<"5. If you won the round your betting amount will be Doubled and it will be added back to your wallet";
    cout<<"\n"<<"6. If you loss the round your betting amount will be loss and it will be deducted from your wallet\n\n";

}
user register_user()
{
    user user_name;
    cout<<"\n"<<"Enter first name =";
    //cin.ignore();
    //getline(cin,user_name.name);
    cin>>user_name.first_name;
    cout<<"\n"<<"Enter last name =";
    cin>>user_name.last_name;
    cout<<"\n"<<"Enter amount you want to add to your wallet = ";
    cin>>user_name.amount;
    user_name.no_of_lossing_matches=0;
    user_name.no_of_wining_matches=0;
    flag=1;
    cout<<"\n"<<"Register successful";
    int id=get_previous_gane_id();
    if(id==-1)
    {
        user_name.game_id = 1000;
    }
    else
    {
        user_name.game_id = id+1;
    }
    cout<<"\n\n"<<"Your game id is = "<<user_name.game_id;
    save_data_to_file(user_name);
    return user_name;
}
user play_game(user user_name)
{
    user user_play;
    int betting;
    int id;
    cout<<"\n\n"<<"Enter your game id provided during Registration To play a game = ";
    cin>>id;
    user_play = get_data_form_file(id);

    if(user_play.game_id!=id)
    {
        cout<<"\n\n"<<"Your Game Id does not match in the system!! Please check";
        return user_name;
    }
    if(user_play.amount==0)
    {
        cout<<"\n\n"<<"Your wallet is empty....First fill it and then play again";
        return user_name;
    }
    cout<<"\n"<<"Lets play a game "<<user_play.first_name<<" "<<user_play.last_name;
    cout<<"\n\n"<<"Your wallet amount is = "<<user_play.amount;
    do{
        cout<<"\n\n"<<"Enter your Betting amount = ";
        cin>>betting;
        if(betting>user_play.amount)
        {
            cout<<"\nYou cannot enter betting amount greater than your wallet amount";
            cout<<"\nYour Wallet amount is :"<<user_play.amount;
        }
        else
        {
            user_play.amount = user_play.amount - betting;
            break;
        }
    }while(true);
    int casino_number;
    cout<<"\n\n"<<"Choose your casino Number from 1-10 = ";
    cin>>casino_number;
    srand(time(0));
    int gen_num = rand()%10+1;
    cout<<"\n"<<"Casino winning number is = "<<gen_num;
    if(casino_number == gen_num)
    {
        cout<<"\nCongratulations!!! you won the game";
        cout<<"\n\n"<<betting<<" Amount is added to your wallet";
        user_play.amount = betting*2;
        user_play.no_of_wining_matches++;
    }
    else
    {
        cout<<"\nBad luck!!! You lost the game";
        cout<<"\n\n"<<betting<<" Amount will be deducted from your wallet";
        user_play.no_of_lossing_matches++;
    }
    save_modify_data(user_play,id);
    return user_play;
}
user add_money_to_wallet(user user_name)
{
    int amount;
    user user_play;
    int id;
    cout<<"\n\n"<<"Enter your game id provided during Registration To play a game = ";
    cin>>id;
    user_play = get_data_form_file(id);

    if(user_play.game_id!=id)
    {
        cout<<"\n\n"<<"Your Game Id does not match in the system!! Please check";
        return user_name;
    }
    cout<<"\n\n"<<"Enter the amount you wanted to add to your wallet = ";
    cin>>amount;
    user_play.amount = user_play.amount + amount;
    save_modify_data(user_play,id);
    return user_name;
}
void get_wining_per(user user_name)
{
    user user_play;
    int id;
    cout<<"\n\n"<<"Enter your game id provided during Registration To play a game = ";
    cin>>id;
    user_play = get_data_form_file(id);

    if(user_play.game_id!=id)
    {
        cout<<"\n\n"<<"Your Game Id does not match in the system!! Please check";

    }
    else{
    float per;
    per =( user_play.no_of_wining_matches / (user_play.no_of_lossing_matches+user_play.no_of_wining_matches) ) * 100;
    cout<<"Your Wining Percentage is = "<<per<<" %";
    }
}
void menu()
{
    user user_name;
    int choice;
    do{
    cout<<"\n\n"<<"**********Welcome to Casino Number Guessing Game**********";
    cout<<"\n\n"<<"choose your option from below ";
    cout<<"\n"<<"1. Read the Rules";
    cout<<"\n"<<"2. Register for new user";
    cout<<"\n"<<"3. Play game";
    cout<<"\n"<<"4. Check your wallet amount";
    cout<<"\n"<<"5. Add amount to your wallet";
    cout<<"\n"<<"6. Get your Winning Percentage";
    cout<<"\n"<<"7. Delete user";
    cout<<"\n"<<"8. Exit game";
    cout<<"\n\n"<<"Enter = ";
    cin>>choice;
    switch(choice)
    {
    case 1:
        rule();
        break;
    case 2:
        user_name = register_user();
        break;
    case 3:
        user_name = play_game(user_name);
        break;
    case 4:
        int id;
        cout<<"\n\n"<<"Enter game id = ";
        cin>>id;
        user_name = get_data_form_file(id);
        if(user_name.game_id!=id)
        {
            cout<<"\n\n"<<"Your Game Id does not match in the system!! Please check";
            break;
        }
        cout<<"\n\n"<<"Your wallet amount is = "<<user_name.amount;
        break;
    case 5:
        user_name = add_money_to_wallet(user_name);
        break;
    case 6:
        get_wining_per(user_name);
        break;
    case 7:
        int id1;
        cout<<"\n\n"<<"Enter game id = ";
        cin>>id1;
        user_name = get_data_form_file(id1);
        if(user_name.game_id!=id1)
        {
            cout<<"\n\n"<<"Your Game Id does not match in the system!! Please check";
            break;
        }
        else
        {
            delete_registration(user_name,id1);
            break;
        }
    case 8:
        cout<<"\n\n"<<"Thankyou for playing Casino Number Guessing Game";
        cout<<"\n"<<"Hope so you enjoyed the game";
        cout<<"\n"<<"See you soon again\n\n";
        break;
    default:
        cout<<"\n"<<"You enter wrong choice......Please try again";
    }
    }while(choice!=7);

}

int main()
{

   menu();
    user user_name=get_data_form_file(1000);
    cout<<user_name.no_of_wining_matches<<"\n\n"<<user_name.amount;
}
